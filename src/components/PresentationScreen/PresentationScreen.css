/* PresentationScreen.css â€” detective placement with left/right in px + entry animations */

/* Root with full-height layout */
.root {
  position: relative;
  width: 100%;
  min-height: 100vh;
  background: #0e0e0e center / cover no-repeat;
  display: grid;
  place-items: center;
  padding: 1rem;

  /* Entry: background container fade (very subtle) */
  opacity: 0;
  animation: bgFadeIn 280ms ease-out both;
}

/* Vignette overlay */
.root::before {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: rgba(0, 0, 0, 0.664);
  z-index: 0;

  /* Entry: overlay first */
  opacity: 0;
  animation: overlayFadeIn 360ms ease-out 60ms both;
}

/* Panel */
.panel {
  font-family: "Metropolis";
  position: relative;
  z-index: 1;
  width: min(1100px, 94%);
  display: grid;
  grid-template-rows: auto auto; /* extra rows are auto-added implicitly */
  gap: 0.9rem;
  border-radius: 14px;
  padding: 0.9rem;
  backdrop-filter: blur(2px) saturate(110%);

  /* Entry: panel appears after background */
  opacity: 0;
  transform: translateY(12px) scale(0.985);
  animation: panelIn 420ms cubic-bezier(0.2, 0.7, 0.2, 1) 220ms forwards;
}

/* Top: role card */
.cardSlot {
  display: grid;
  place-items: center;
  padding: 0.25rem;

  /* Entry: card slightly later than panel mount */
  opacity: 0;
  transform: translateY(10px);
  animation: floatIn 380ms cubic-bezier(0.2, 0.7, 0.2, 1) 300ms forwards;
}
.cardImage {
  width: 100%;
  max-width: 900px;
  height: auto;
  object-fit: contain;
  display: block;
  filter: drop-shadow(0 10px 20px rgba(0, 0, 0, 0.45));
}

/* Bottom row: left text, right text, optional ally chip at right */
.textRow {
  display: grid;
  grid-template-columns: 1.55fr 1fr; /* default two columns */
  gap: 0.9rem;
  align-items: start;

  /* Entry: boxes slide in a bit after the card */
  opacity: 0;
  transform: translateY(8px);
  animation: floatIn 420ms cubic-bezier(0.2, 0.7, 0.2, 1) 380ms forwards;
}
.textRow--withChip {
  grid-template-columns: 1.55fr 1fr auto; /* third column for the chip */
  align-items: center;
}

/* Text boxes: centered content */
.textBox {
  font-family: "Metropolis";
  font-weight: 500;
  letter-spacing: 0.02em;
  font-size: clamp(1rem, 1.1vw + 0.55rem, 1.25rem);

  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;

  padding: 0.8rem 1rem;
  border-radius: 10px;
  background: rgba(0, 0, 0, 0.425);
  color: #e6d7a6;

  min-height: 280px;
  line-height: 1.5;
  white-space: normal;
  word-break: break-word;
  hyphens: auto;
  overflow: auto;

  /* Staggered reveal for each box */
  opacity: 0;
  transform: translateY(6px) scale(0.995);
  animation: boxIn 420ms cubic-bezier(0.2, 0.7, 0.2, 1) 420ms forwards;
}
.textBox[data-variant="big"][data-det="true"] {
  min-height: 200px;
}

/* Slight stagger using nth-child (left then right) */
.textRow .textBox:nth-child(1) {
  animation-delay: 420ms;
}
.textRow .textBox:nth-child(2) {
  animation-delay: 460ms;
}

/* Colored names inline */
.role-name {
  font-weight: 800;
}
.role-name.role-murderer {
  color: #ef4444;
} /* red-500 */
.role-name.role-accomplice {
  color: #f59e0b;
} /* amber-500 */
.role-name.role-detective {
  color: #ffffff;
}

/* ===== Detective textbox manual placement (edit px here) ===== */
.detective-box {
  position: relative;
  left: 210px; /* tweak horizontally; negative to move left */
  right: auto;
  top: 0px;
}
/* Reset offsets on small screens so it stacks nicely */
@media (max-width: 1024px) {
  .detective-box {
    left: 0px;
    right: auto;
    top: 0px;
  }
}
/* =============================================================== */

/* ---------- Ally chip column ---------- */
.ally-chipWrap {
  display: grid;
  place-items: center;

  /* Chip comes after the text boxes */
  opacity: 0;
  transform: translateY(6px);
  animation: floatIn 380ms cubic-bezier(0.2, 0.7, 0.2, 1) 480ms forwards;
}
.ally-chip {
  display: grid;
  place-items: center;
  gap: 8px;
}

/* Name plate (PlayerBadge vibe) */
.ally-name-box {
  font-family: "Metropolis";
  font-weight: 700;
  letter-spacing: 0.01em;
  padding: 6px 10px;
  border-radius: 10px;
  border: 1px solid #000;
  box-shadow: 0 1px 2px rgb(0 0 0 / 0.06), 0 1px 1px -1px rgb(0 0 0 / 0.08);
  color: #111;
}
.ally-name-box[data-role="murderer"] {
  background: #ef4444;
  color: #fff;
}
.ally-name-box[data-role="accomplice"] {
  background: #f59e0b;
  color: #1a1a1a;
}
.ally-name-box[data-role="detective"] {
  background: #e6d7a6;
  color: #1a1a1a;
}

/* Avatar circle with ring & glow (smaller than PlayerBadge) */
.ally-avatar-circle {
  position: relative;
  width: 138px;
  height: 138px;
  border-radius: 999px;
  overflow: hidden;
  background: #cbd5e1;

  --ring-color: #9ca3af;
  --ring-width: 4px;
  --ring-glow-blur: 18px;
  --ring-glow-spread: 6px;

  border: 1px solid #000;
  box-shadow: 0 0 0 var(--ring-width) var(--ring-color),
    0 0 0 calc(var(--ring-width) + 1px) #000,
    0 0 var(--ring-glow-blur) var(--ring-glow-spread) var(--ring-color),
    0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
}
@supports (color: color-mix(in oklab, #000 50%, transparent)) {
  .ally-avatar-circle {
    --ring-glow: color-mix(in oklab, var(--ring-color) 55%, transparent);
    box-shadow: 0 0 0 var(--ring-width) var(--ring-color),
      0 0 0 calc(var(--ring-width) + 1px) #000,
      0 0 var(--ring-glow-blur) var(--ring-glow-spread) var(--ring-glow),
      0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  }
}
.ally-avatar-circle.no-glow {
  box-shadow: 0 0 0 var(--ring-width) var(--ring-color),
    0 0 0 calc(var(--ring-width) + 1px) #000;
}
.ally-avatar-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* ---------- Ready button row ---------- */
.readyRow {
  display: flex;
  justify-content: center;
  padding-top: 0rem;

  /* Entry: after everything else */
  opacity: 0;
  transform: translateY(6px);
  animation: floatIn 360ms cubic-bezier(0.2, 0.7, 0.2, 1) 520ms forwards;
}
.readyButton {
  font-family: "Metropolis";
  font-weight: 1000;
  text-transform: uppercase;
  padding: 12px 16px;
  border-radius: 10px;
  border: 1px solid #000;

  background: #e6d7a6; /* matches cream used in UI */
  color: #1a1a1a;

  box-shadow: 0 1px 2px rgb(0 0 0 / 0.15), 0 4px 10px rgb(0 0 0 / 0.15);
  cursor: pointer;
  transition: transform 120ms ease, filter 120ms ease, box-shadow 120ms ease;

  position: relative;
  isolation: isolate; /* keeps the glow behind the button content */
}
/* ---------- Glowing border for Ready button ---------- */
.readyButton::before {
  content: "";
  position: absolute;
  inset: 0px; /* fits the button */
  border-radius: 10px;
  padding: 2px 4px;
  pointer-events: none;
  z-index: -1;

  background: linear-gradient(90deg, #f4e1a3, #fff7d1, #f4e1a3);

  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;

  opacity: 0;
  filter: blur(0.5px);
  transform: scale(1);
  transition: opacity 160ms ease, filter 160ms ease, transform 160ms ease;
}
/* Hover: brighter, bigger (keeps your grow effect) */
.readyButton:hover {
  transform: translateY(-1px) scale(1.06);
  box-shadow: 0 3px 6px rgb(0 0 0 / 0.22), 0 10px 22px rgb(0 0 0 / 0.22);
  filter: brightness(1.05);
}
.readyButton:hover::before {
  opacity: 1;
  filter: blur(2px);
  transform: scale(1.04);
}
/* Active: back to normal press feedback */
.readyButton:active {
  transform: translateY(0) scale(1);
  filter: brightness(0.98);
}
/* Focus-visible: accessible glow without hover */
.readyButton:focus-visible::before {
  opacity: 1;
  filter: blur(1.6px);
  transform: scale(1.02);
}

/* ---------- Animations ---------- */
@keyframes bgFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes overlayFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes panelIn {
  from {
    opacity: 0;
    transform: translateY(12px) scale(0.985);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}
@keyframes floatIn {
  from {
    opacity: 0;
    transform: translateY(8px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes boxIn {
  from {
    opacity: 0;
    transform: translateY(6px) scale(0.995);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

/* ---------- Responsive ---------- */
@media (max-width: 1024px) {
  .cardImage {
    max-width: 360px;
  }
  .textRow,
  .textRow--withChip {
    grid-template-columns: 1fr;
  } /* stack */
  .ally-chipWrap {
    margin-top: 10px;
  }
  .textBox {
    min-height: 240px;
  }
  .textBox[data-variant="big"][data-det="true"] {
    min-height: 180px;
  }
  .readyRow {
    padding-top: 0.2rem;
  }
}

/* ---------- Accessibility: reduce motion ---------- */
@media (prefers-reduced-motion: reduce) {
  .root,
  .root::before,
  .panel,
  .cardSlot,
  .textRow,
  .textBox,
  .ally-chipWrap,
  .readyRow {
    animation: none !important;
    transform: none !important;
    opacity: 1 !important;
  }
}
